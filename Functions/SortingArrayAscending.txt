// array sorting in ascending and descending manner
/*
Note : when an array is passed as an argument in calling function it refers to the memory address of first element of an array
        and so the memory address is referenced in formal argument using a array type parameter and argument of array size in given program below
        Also remember when any change is made in called function of array it is also reflected to original array because value of its memory address is being
        is being evaluated
*/

#include<stdio.h>

int main()
{
    int n;
    printf("enter the size of an array : ");
    scanf("%d",&n);
    int a[n];
    array_elements(a,n);
    return 0;
}

void array_elements(int b[],int n)
{
    for(int i = 0; i < n; i++)
    {
        scanf("%d",&b[i]);
    }
    printf("\nElements before sorting in ascending order : \n");
    for(int i = 0; i < n; i++)
    {
        printf("%d ",b[i]);
    }
    printf("\n");
    sorting_array_ascending(b,n);//sorting array in ascending by passing array as argument
    sorting_array_descending(b,n);// sorting array in descending manner by passing array as an argument
}

// sorting array in ascending
void sorting_array_ascending(int b[],int n)// array passed as an formal argument
{
    int t;
    for(int i = 0; i < n-1; i++)
    {
        for(int j = 0; j < n-1; j++)
        {
            if(b[j] >= b[j+1])
            {
                t = b[j];
                b[j] = b[j+1];
                b[j+1] = t;
            }
        }
    }
    printf("\nSorted Arrays in ascending order : ");
    for(int i = 0; i < n; i++)
    {
        printf("%d ",b[i]);
    }
    printf("\n");
}

//sorting array in descending manner
void sorting_array_descending(int b[],int n)
{
    int t;
    for(int i = 0; i < n-1; i++)
    {
        for(int j = 0; j < n-1; j++)
        {
            if(b[j] <= b[j+1])
            {
                t = b[j];
                b[j] = b[j+1];
                b[j+1] = t;
            }
        }
    }
    printf("\nSorted Arrays in descending order : ");
    for(int i = 0; i < n; i++)
    {
        printf("%d ",b[i]);
    }
    printf("\n");
}
